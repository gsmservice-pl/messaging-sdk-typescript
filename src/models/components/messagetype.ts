/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";

/**
 * Message type (SmsType.SmsPro -> SMS PRO, SmsType.SmsEco -> SMS ECO, SmsType.SmsTwoWay ->SMS 2WAY, SmsType.Mms -> MMS)
 */
export const MessageType = {
  SmsPro: 1,
  SmsEco: 3,
  SmsTwoWay: 4,
  Mms: 10,
} as const;
/**
 * Message type (SmsType.SmsPro -> SMS PRO, SmsType.SmsEco -> SMS ECO, SmsType.SmsTwoWay ->SMS 2WAY, SmsType.Mms -> MMS)
 */
export type MessageType = OpenEnum<typeof MessageType>;

/** @internal */
export const MessageType$inboundSchema: z.ZodType<
  MessageType,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(MessageType),
    z.number().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const MessageType$outboundSchema: z.ZodType<
  MessageType,
  z.ZodTypeDef,
  MessageType
> = z.union([
  z.nativeEnum(MessageType),
  z.number().and(z.custom<Unrecognized<number>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageType$ {
  /** @deprecated use `MessageType$inboundSchema` instead. */
  export const inboundSchema = MessageType$inboundSchema;
  /** @deprecated use `MessageType$outboundSchema` instead. */
  export const outboundSchema = MessageType$outboundSchema;
}
