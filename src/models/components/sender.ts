/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * An object with the properties of the message sender
 */
export type Sender = {
  /**
   * Message sender name
   */
  sender: string;
  /**
   * Sender name status
   */
  status: string;
  /**
   * Is the sender default?
   */
  isDefault: boolean;
};

/** @internal */
export const Sender$inboundSchema: z.ZodType<Sender, z.ZodTypeDef, unknown> = z
  .object({
    sender: z.string(),
    status: z.string(),
    is_default: z.boolean(),
  }).transform((v) => {
    return remap$(v, {
      "is_default": "isDefault",
    });
  });

/** @internal */
export type Sender$Outbound = {
  sender: string;
  status: string;
  is_default: boolean;
};

/** @internal */
export const Sender$outboundSchema: z.ZodType<
  Sender$Outbound,
  z.ZodTypeDef,
  Sender
> = z.object({
  sender: z.string(),
  status: z.string(),
  isDefault: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    isDefault: "is_default",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Sender$ {
  /** @deprecated use `Sender$inboundSchema` instead. */
  export const inboundSchema = Sender$inboundSchema;
  /** @deprecated use `Sender$outboundSchema` instead. */
  export const outboundSchema = Sender$outboundSchema;
  /** @deprecated use `Sender$Outbound` instead. */
  export type Outbound = Sender$Outbound;
}
