/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * 'Ping' response object
 */
export type PingResponse = {
  /**
   * API service status: OK - API available, ERR - API unavailable
   */
  status?: string | undefined;
  /**
   * Current API Version
   */
  version?: string | undefined;
  /**
   * Was the connection established with the test system (SANDBOX)?
   */
  sandbox?: boolean | undefined;
};

/** @internal */
export const PingResponse$inboundSchema: z.ZodType<
  PingResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.string().optional(),
  version: z.string().optional(),
  sandbox: z.boolean().optional(),
});

/** @internal */
export type PingResponse$Outbound = {
  status?: string | undefined;
  version?: string | undefined;
  sandbox?: boolean | undefined;
};

/** @internal */
export const PingResponse$outboundSchema: z.ZodType<
  PingResponse$Outbound,
  z.ZodTypeDef,
  PingResponse
> = z.object({
  status: z.string().optional(),
  version: z.string().optional(),
  sandbox: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PingResponse$ {
  /** @deprecated use `PingResponse$inboundSchema` instead. */
  export const inboundSchema = PingResponse$inboundSchema;
  /** @deprecated use `PingResponse$outboundSchema` instead. */
  export const outboundSchema = PingResponse$outboundSchema;
  /** @deprecated use `PingResponse$Outbound` instead. */
  export type Outbound = PingResponse$Outbound;
}
