/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type GetIncomingMessagesRequest = {
  /**
   * Message IDs assigned by the system (separated by comma). The system will accept a maximum of 50 identifiers in one call.
   */
  ids: Array<number>;
};

export type GetIncomingMessagesResponse = {
  headers: { [k: string]: Array<string> };
  result: Array<components.IncomingMessage>;
};

/** @internal */
export const GetIncomingMessagesRequest$inboundSchema: z.ZodType<
  GetIncomingMessagesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ids: z.array(z.number().int()),
});

/** @internal */
export type GetIncomingMessagesRequest$Outbound = {
  ids: Array<number>;
};

/** @internal */
export const GetIncomingMessagesRequest$outboundSchema: z.ZodType<
  GetIncomingMessagesRequest$Outbound,
  z.ZodTypeDef,
  GetIncomingMessagesRequest
> = z.object({
  ids: z.array(z.number().int()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetIncomingMessagesRequest$ {
  /** @deprecated use `GetIncomingMessagesRequest$inboundSchema` instead. */
  export const inboundSchema = GetIncomingMessagesRequest$inboundSchema;
  /** @deprecated use `GetIncomingMessagesRequest$outboundSchema` instead. */
  export const outboundSchema = GetIncomingMessagesRequest$outboundSchema;
  /** @deprecated use `GetIncomingMessagesRequest$Outbound` instead. */
  export type Outbound = GetIncomingMessagesRequest$Outbound;
}

/** @internal */
export const GetIncomingMessagesResponse$inboundSchema: z.ZodType<
  GetIncomingMessagesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.array(components.IncomingMessage$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type GetIncomingMessagesResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: Array<components.IncomingMessage$Outbound>;
};

/** @internal */
export const GetIncomingMessagesResponse$outboundSchema: z.ZodType<
  GetIncomingMessagesResponse$Outbound,
  z.ZodTypeDef,
  GetIncomingMessagesResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: z.array(components.IncomingMessage$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetIncomingMessagesResponse$ {
  /** @deprecated use `GetIncomingMessagesResponse$inboundSchema` instead. */
  export const inboundSchema = GetIncomingMessagesResponse$inboundSchema;
  /** @deprecated use `GetIncomingMessagesResponse$outboundSchema` instead. */
  export const outboundSchema = GetIncomingMessagesResponse$outboundSchema;
  /** @deprecated use `GetIncomingMessagesResponse$Outbound` instead. */
  export type Outbound = GetIncomingMessagesResponse$Outbound;
}
