/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type SetDefaultSenderRequest = {
  /**
   * Sender name to set as default
   */
  sender: string;
};

export type SetDefaultSenderResponse = {
  headers: { [k: string]: Array<string> };
};

/** @internal */
export const SetDefaultSenderRequest$inboundSchema: z.ZodType<
  SetDefaultSenderRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sender: z.string(),
});

/** @internal */
export type SetDefaultSenderRequest$Outbound = {
  sender: string;
};

/** @internal */
export const SetDefaultSenderRequest$outboundSchema: z.ZodType<
  SetDefaultSenderRequest$Outbound,
  z.ZodTypeDef,
  SetDefaultSenderRequest
> = z.object({
  sender: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetDefaultSenderRequest$ {
  /** @deprecated use `SetDefaultSenderRequest$inboundSchema` instead. */
  export const inboundSchema = SetDefaultSenderRequest$inboundSchema;
  /** @deprecated use `SetDefaultSenderRequest$outboundSchema` instead. */
  export const outboundSchema = SetDefaultSenderRequest$outboundSchema;
  /** @deprecated use `SetDefaultSenderRequest$Outbound` instead. */
  export type Outbound = SetDefaultSenderRequest$Outbound;
}

/** @internal */
export const SetDefaultSenderResponse$inboundSchema: z.ZodType<
  SetDefaultSenderResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
  });
});

/** @internal */
export type SetDefaultSenderResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
};

/** @internal */
export const SetDefaultSenderResponse$outboundSchema: z.ZodType<
  SetDefaultSenderResponse$Outbound,
  z.ZodTypeDef,
  SetDefaultSenderResponse
> = z.object({
  headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetDefaultSenderResponse$ {
  /** @deprecated use `SetDefaultSenderResponse$inboundSchema` instead. */
  export const inboundSchema = SetDefaultSenderResponse$inboundSchema;
  /** @deprecated use `SetDefaultSenderResponse$outboundSchema` instead. */
  export const outboundSchema = SetDefaultSenderResponse$outboundSchema;
  /** @deprecated use `SetDefaultSenderResponse$Outbound` instead. */
  export type Outbound = SetDefaultSenderResponse$Outbound;
}
