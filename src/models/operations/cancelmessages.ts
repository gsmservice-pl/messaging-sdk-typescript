/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type CancelMessagesRequest = {
  /**
   * Array of Message IDs assigned by the system. The system will accept a maximum of 50 identifiers in one call.
   */
  ids: Array<number>;
};

export type CancelMessagesResponse = {
  headers: { [k: string]: Array<string> };
  result: Array<components.CancelledMessage>;
};

/** @internal */
export const CancelMessagesRequest$inboundSchema: z.ZodType<
  CancelMessagesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ids: z.array(z.number().int()),
});

/** @internal */
export type CancelMessagesRequest$Outbound = {
  ids: Array<number>;
};

/** @internal */
export const CancelMessagesRequest$outboundSchema: z.ZodType<
  CancelMessagesRequest$Outbound,
  z.ZodTypeDef,
  CancelMessagesRequest
> = z.object({
  ids: z.array(z.number().int()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CancelMessagesRequest$ {
  /** @deprecated use `CancelMessagesRequest$inboundSchema` instead. */
  export const inboundSchema = CancelMessagesRequest$inboundSchema;
  /** @deprecated use `CancelMessagesRequest$outboundSchema` instead. */
  export const outboundSchema = CancelMessagesRequest$outboundSchema;
  /** @deprecated use `CancelMessagesRequest$Outbound` instead. */
  export type Outbound = CancelMessagesRequest$Outbound;
}

/** @internal */
export const CancelMessagesResponse$inboundSchema: z.ZodType<
  CancelMessagesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.array(components.CancelledMessage$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type CancelMessagesResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: Array<components.CancelledMessage$Outbound>;
};

/** @internal */
export const CancelMessagesResponse$outboundSchema: z.ZodType<
  CancelMessagesResponse$Outbound,
  z.ZodTypeDef,
  CancelMessagesResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: z.array(components.CancelledMessage$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CancelMessagesResponse$ {
  /** @deprecated use `CancelMessagesResponse$inboundSchema` instead. */
  export const inboundSchema = CancelMessagesResponse$inboundSchema;
  /** @deprecated use `CancelMessagesResponse$outboundSchema` instead. */
  export const outboundSchema = CancelMessagesResponse$outboundSchema;
  /** @deprecated use `CancelMessagesResponse$Outbound` instead. */
  export type Outbound = CancelMessagesResponse$Outbound;
}
