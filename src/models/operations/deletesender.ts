/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type DeleteSenderRequest = {
  /**
   * Sender name to be removed
   */
  sender: string;
};

export type DeleteSenderResponse = {
  headers: { [k: string]: Array<string> };
};

/** @internal */
export const DeleteSenderRequest$inboundSchema: z.ZodType<
  DeleteSenderRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sender: z.string(),
});

/** @internal */
export type DeleteSenderRequest$Outbound = {
  sender: string;
};

/** @internal */
export const DeleteSenderRequest$outboundSchema: z.ZodType<
  DeleteSenderRequest$Outbound,
  z.ZodTypeDef,
  DeleteSenderRequest
> = z.object({
  sender: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSenderRequest$ {
  /** @deprecated use `DeleteSenderRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteSenderRequest$inboundSchema;
  /** @deprecated use `DeleteSenderRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteSenderRequest$outboundSchema;
  /** @deprecated use `DeleteSenderRequest$Outbound` instead. */
  export type Outbound = DeleteSenderRequest$Outbound;
}

/** @internal */
export const DeleteSenderResponse$inboundSchema: z.ZodType<
  DeleteSenderResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
  });
});

/** @internal */
export type DeleteSenderResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
};

/** @internal */
export const DeleteSenderResponse$outboundSchema: z.ZodType<
  DeleteSenderResponse$Outbound,
  z.ZodTypeDef,
  DeleteSenderResponse
> = z.object({
  headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSenderResponse$ {
  /** @deprecated use `DeleteSenderResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteSenderResponse$inboundSchema;
  /** @deprecated use `DeleteSenderResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteSenderResponse$outboundSchema;
  /** @deprecated use `DeleteSenderResponse$Outbound` instead. */
  export type Outbound = DeleteSenderResponse$Outbound;
}
