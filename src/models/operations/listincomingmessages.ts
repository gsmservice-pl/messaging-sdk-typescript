/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type ListIncomingMessagesRequest = {
  /**
   * Page number of results
   */
  page?: number | undefined;
  /**
   * Number of results on one page
   */
  limit?: number | undefined;
};

export type ListIncomingMessagesResponse = {
  headers: { [k: string]: Array<string> };
  result: Array<components.IncomingMessage>;
};

/** @internal */
export const ListIncomingMessagesRequest$inboundSchema: z.ZodType<
  ListIncomingMessagesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.number().int().default(1),
  limit: z.number().int().default(10),
});

/** @internal */
export type ListIncomingMessagesRequest$Outbound = {
  page: number;
  limit: number;
};

/** @internal */
export const ListIncomingMessagesRequest$outboundSchema: z.ZodType<
  ListIncomingMessagesRequest$Outbound,
  z.ZodTypeDef,
  ListIncomingMessagesRequest
> = z.object({
  page: z.number().int().default(1),
  limit: z.number().int().default(10),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListIncomingMessagesRequest$ {
  /** @deprecated use `ListIncomingMessagesRequest$inboundSchema` instead. */
  export const inboundSchema = ListIncomingMessagesRequest$inboundSchema;
  /** @deprecated use `ListIncomingMessagesRequest$outboundSchema` instead. */
  export const outboundSchema = ListIncomingMessagesRequest$outboundSchema;
  /** @deprecated use `ListIncomingMessagesRequest$Outbound` instead. */
  export type Outbound = ListIncomingMessagesRequest$Outbound;
}

/** @internal */
export const ListIncomingMessagesResponse$inboundSchema: z.ZodType<
  ListIncomingMessagesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.array(components.IncomingMessage$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type ListIncomingMessagesResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: Array<components.IncomingMessage$Outbound>;
};

/** @internal */
export const ListIncomingMessagesResponse$outboundSchema: z.ZodType<
  ListIncomingMessagesResponse$Outbound,
  z.ZodTypeDef,
  ListIncomingMessagesResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: z.array(components.IncomingMessage$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListIncomingMessagesResponse$ {
  /** @deprecated use `ListIncomingMessagesResponse$inboundSchema` instead. */
  export const inboundSchema = ListIncomingMessagesResponse$inboundSchema;
  /** @deprecated use `ListIncomingMessagesResponse$outboundSchema` instead. */
  export const outboundSchema = ListIncomingMessagesResponse$outboundSchema;
  /** @deprecated use `ListIncomingMessagesResponse$Outbound` instead. */
  export type Outbound = ListIncomingMessagesResponse$Outbound;
}
