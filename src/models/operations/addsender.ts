/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type AddSenderResponse = {
  headers: { [k: string]: Array<string> };
  result: components.Sender;
};

/** @internal */
export const AddSenderResponse$inboundSchema: z.ZodType<
  AddSenderResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: components.Sender$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type AddSenderResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: components.Sender$Outbound;
};

/** @internal */
export const AddSenderResponse$outboundSchema: z.ZodType<
  AddSenderResponse$Outbound,
  z.ZodTypeDef,
  AddSenderResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: components.Sender$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddSenderResponse$ {
  /** @deprecated use `AddSenderResponse$inboundSchema` instead. */
  export const inboundSchema = AddSenderResponse$inboundSchema;
  /** @deprecated use `AddSenderResponse$outboundSchema` instead. */
  export const outboundSchema = AddSenderResponse$outboundSchema;
  /** @deprecated use `AddSenderResponse$Outbound` instead. */
  export type Outbound = AddSenderResponse$Outbound;
}
