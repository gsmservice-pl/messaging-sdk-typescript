/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { outgoingList } from "../../funcs/outgoingList.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.ListMessagesRequest$inboundSchema,
};

export const tool$outgoingList: ToolDefinition<typeof args> = {
  name: "outgoing_list",
  description: `Lists the history of sent messages

Get the details and current status of all of sent messages from your account message history. This method supports pagination so you have to pass a \`ListMessagesRequest\` with \`page\` property (number of page with messages which you want to access) and a \`limit\` value (max of messages per page). Messages are fetched from the latest one. This method will accept maximum value of **50** as \`limit\` parameter value.

As a successful result a \`ListMessagesResponse\` object will be returned containing \`result\` property with an \`array\` of \`Message\` objects, each object per single message. \`ListMessagesResponse\` will also contain \`headers\` array property where you can find \`X-Total-Results\` (a total count of all messages which are available in history on your account), \`X-Total-Pages\` (a total number of all pages with results), \`X-Current-Page\` (A current page number) and \`X-Limit\` (messages count per single page) elements.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await outgoingList(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value.result;

    return formatResult(value, apiCall);
  },
};
