/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { sendersAdd } from "../../funcs/sendersAdd.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.SenderInput$inboundSchema,
};

export const tool$sendersAdd: ToolDefinition<typeof args> = {
  name: "senders_add",
  description: `Add a new sender name

Define a new allowed sender on your account. You should pass as parameter a \`SenderInput\` object with two properties: \`sender\` (defines sender name) and \`description\`. Please carefully fill this property with the extensive description of a sender name (what will be its use, what the name mean, etc).

As a successful result a \`AddSenderResponse\` object will be returned with a property \`result\` containing a \`Sender\` object with details and status of added sender name.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await sendersAdd(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value.result;

    return formatResult(value, apiCall);
  },
};
