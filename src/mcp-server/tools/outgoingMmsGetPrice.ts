/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { outgoingMmsGetPrice } from "../../funcs/outgoingMmsGetPrice.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetMmsPriceRequestBody$inboundSchema,
};

export const tool$outgoingMmsGetPrice: ToolDefinition<typeof args> = {
  name: "outgoing-mms-get-price",
  description: `Check the price of MMS Messages

Check the price of single or multiple MMS messages at the same time before sending them. You can pass a single \`MmsMessage\` object (for single message) or \`array\` of \`MmsMessage\` objects (for multiple messages). Each \`MmsMessage\` object has several properties, describing message parameters such as recipient phone number, content of the message, attachments, etc. 
The method will accept maximum **50** messages in one call.

As a successful result a \`GetMmsPriceResponse\` object will be returned with \`result\` property containing \`array\` of \`Price\` objects, one object per each single message. You should check the \`error\` property of each \`Price\` object to make sure which were priced successfully and which finished with an error. Successfully priced messages will have \`null\` value of \`error\` property.

\`GetSmsPriceResponse\` object will include also \`headers\` array with \`X-Success-Count\` (a count of messages which were processed successfully) and \`X-Error-Count\` (count of messages which were rejected) elements.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await outgoingMmsGetPrice(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value.result;

    return formatResult(value, apiCall);
  },
};
