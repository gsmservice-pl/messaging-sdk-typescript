/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountsGetSubaccount } from "../../funcs/accountsGetSubaccount.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetSubaccountDetailsRequest$inboundSchema,
};

export const tool$accountsGetSubaccount: ToolDefinition<typeof args> = {
  name: "accounts_get-subaccount",
  description: `Get subaccount details

Check account balance and other details such subcredit balance of a subaccount. Subaccounts are additional users who can access your account services and the details. You can restrict access level and setup privileges to subaccounts using [user panel](https://panel.szybkisms.pl).

This method accepts an object \`GetSubaccountDetailsRequest\` with \`userLogin\` property. You should pass there the full subaccount login to access its data. 

As a successful result a \`AccountResponse\` object will be returned with properties describing details of subaccount with provided login.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await accountsGetSubaccount(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
